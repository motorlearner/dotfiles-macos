# start at login
start-at-login = true

# run after login to macos user session if start at login
after-login-command = []

# run after startup
after-startup-command = [
  # 'exec-and-forget sketchybar,'
  'exec-and-forget borders active_color=0xffD800AC inactive_color=0xff0F5EBE width=6.0 style=round hdpi=on'
]

# Notify Sketchybar about workspace change
# exec-on-workspace-change = ['/bin/zsh', '-c',
    # 'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE'
# ]

# if a parent container has only on child containers, remove the parent
enable-normalization-flatten-containers = true
# https://nikitabobko.github.io/AeroSpace/guide#normalization

# child containers cannot have the same layout as the parent
enable-normalization-opposite-orientation-for-nested-containers = true
# https://nikitabobko.github.io/AeroSpace/guide#normalization

# default layout: tiles | accordion
default-root-container-layout = 'tiles'

# default orientation: horizontal|vertical|auto
# where auto is according to monitor orientation
default-root-container-orientation = 'auto'

accordion-padding = 50
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
automatically-unhide-macos-hidden-apps = true

[gaps]
inner.horizontal = [
  { monitor.'built in'     = 12 }, # built in
  { monitor.'lg ultrafine' = 20 }, # home monitor
  { monitor.'lenovo'       = 16 }, # work monitors
  12                               # default
]
inner.vertical =   [
  { monitor.'built in'     = 12 }, # built in
  { monitor.'lg ultrafine' = 20 }, # home monitor
  { monitor.'lenovo'       = 16 }, # work monitors
  12                               # default
]
outer.left =       [
  { monitor.'built in'     = 12 }, # built in
  { monitor.'lg ultrafine' = 20 }, # home monitor
  { monitor.'lenovo'       = 16 }, # work monitors
  12                               # default
]
outer.right =      [
  { monitor.'built in'     = 12 }, # built in
  { monitor.'lg ultrafine' = 20 }, # home monitor
  { monitor.'lenovo'       = 16 }, # work monitors
  12                               # default
]
outer.top =        [
  { monitor.'built in'     = 12 }, # built in
  { monitor.'lg ultrafine' = 20 }, # home monitor
  { monitor.'lenovo'       = 16 }, # work monitors
  12                               # default
]
outer.bottom =     [
  { monitor.'built in'     = 12 }, # built in
  { monitor.'lg ultrafine' = 20 }, # home monitor
  { monitor.'lenovo'       = 16 }, # work monitors
  12                               # default
]

# allows to effectively throw window to monitor by throwing
# it to workspace that is assigned to that monitor
[workspace-to-monitor-force-assignment]
A = 1 # workspace A always on monitor 1
B = 2 # workspace B always on monitor 2
C = 3 # workspace C always on monitor 3

# keys
[key-mapping]
preset = 'qwerty'

[key-mapping.key-notation-to-key-code]
xleft     = 'semicolon'
xright    = 'backslash'
xup       = 'leftSquareBracket'
xdown     = 'quote'
xtopleft  = 'p'
xtopright = 'rightSquareBracket'

[mode.main.binding]
# reload config
ctrl-alt-cmd-space = 'reload-config'

# focus window (within workspace)
alt-cmd-up    = 'focus --boundaries workspace up' 
alt-cmd-down  = 'focus --boundaries workspace down' 
alt-cmd-left  = 'focus --boundaries workspace left' 
alt-cmd-right = 'focus --boundaries workspace right'

# focus workspace (within monitor)
ctrl-alt-cmd-right = 'workspace --wrap-around next'
ctrl-alt-cmd-left  = 'workspace --wrap-around prev'
ctrl-alt-cmd-slash  = 'workspace-back-and-forth'

# focus monitor
ctrl-alt-cmd-up   = 'focus-monitor --wrap-around next'
ctrl-alt-cmd-down = 'focus-monitor --wrap-around prev'

# move window within workspace
shift-alt-cmd-up    = 'move up' 
shift-alt-cmd-down  = 'move down' 
shift-alt-cmd-left  = 'move left' 
shift-alt-cmd-right = 'move right'

# move window to workspace
shift-ctrl-alt-cmd-right = 'move-node-to-workspace --focus-follows-window --wrap-around next'
shift-ctrl-alt-cmd-left  = 'move-node-to-workspace --focus-follows-window --wrap-around prev'

# move workspace to monitor
shift-ctrl-alt-cmd-up   = 'move-workspace-to-monitor --wrap-around next'
shift-ctrl-alt-cmd-down = 'move-workspace-to-monitor --wrap-around prev'

# window resize
alt-cmd-minus = 'resize smart -50'
alt-cmd-equal = 'resize smart +50'
ctrl-alt-cmd-equal = 'balance-sizes'

# window toggle float
alt-cmd-f = 'layout floating tiling'

# workspace layout and orientation
ctrl-alt-cmd-l = 'layout tiles accordion'
ctrl-alt-cmd-o = 'layout horizontal vertical'

# close windows
alt-cmd-backspace       = 'close'
shift-alt-cmd-backspace = 'close-all-windows-but-current'

# modes
alt-cmd-enter            = 'mode join_windows'
ctrl-alt-cmd-enter       = 'mode workspace_select'
shift-ctrl-alt-cmd-enter = 'mode throw_window_to_workspace'


[mode.join_windows.binding]
# join
alt-cmd-up    = ['join-with up',    'mode main']
alt-cmd-down  = ['join-with down',  'mode main']
alt-cmd-right = ['join-with right', 'mode main']
alt-cmd-left  = ['join-with left',  'mode main']
# unjoin
alt-cmd-enter = ['flatten-workspace-tree', 'mode main']


[mode.throw_window_to_workspace.binding]
# throw to previous / next workpace
right = ['move-node-to-workspace --focus-follows-window --wrap-around next', 'mode main']
left  = ['move-node-to-workspace --focus-follows-window --wrap-around prev', 'mode main']
# throw to specific workspace
1 = ['move-node-to-workspace 1', 'mode main']
2 = ['move-node-to-workspace 2', 'mode main']
3 = ['move-node-to-workspace 3', 'mode main']
4 = ['move-node-to-workspace 4', 'mode main']
5 = ['move-node-to-workspace 5', 'mode main']
6 = ['move-node-to-workspace 6', 'mode main']
7 = ['move-node-to-workspace 7', 'mode main']
8 = ['move-node-to-workspace 8', 'mode main']
9 = ['move-node-to-workspace 9', 'mode main']
a = ['move-node-to-workspace A', 'mode main']
b = ['move-node-to-workspace B', 'mode main']
c = ['move-node-to-workspace C', 'mode main']


[mode.workspace_select.binding]
# focus previous / next workspace
right = ['workspace --wrap-around next' , 'mode main']
left  = ['workspace --wrap-around prev' , 'mode main']
# focus specific workspace 
1 = ['workspace 1', 'mode main']
2 = ['workspace 2', 'mode main']
3 = ['workspace 3', 'mode main']
4 = ['workspace 4', 'mode main']
5 = ['workspace 5', 'mode main']
6 = ['workspace 6', 'mode main']
7 = ['workspace 7', 'mode main']
8 = ['workspace 8', 'mode main']
9 = ['workspace 9', 'mode main']
a = ['workspace A', 'mode main']
b = ['workspace B', 'mode main']
c = ['workspace C', 'mode main']
# summon specific workspace to active monitor
# (these do not work, 2024-10)
alt-1 = ['summon-workspace 1', 'mode main']
alt-2 = ['summon-workspace 2', 'mode main']
alt-3 = ['summon-workspace 3', 'mode main']
alt-4 = ['summon-workspace 4', 'mode main']
alt-5 = ['summon-workspace 5', 'mode main']
alt-6 = ['summon-workspace 6', 'mode main']
alt-7 = ['summon-workspace 7', 'mode main']
alt-8 = ['summon-workspace 8', 'mode main']
alt-9 = ['summon-workspace 9', 'mode main']
alt-a = ['summon-workspace A', 'mode main']
alt-b = ['summon-workspace B', 'mode main']
alt-c = ['summon-workspace C', 'mode main']


# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift